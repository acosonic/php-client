<?php
/**
 * CustomerApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Domdistrict Shop API
 *
 * BUILD TIME: 2022-09-08 12:31:24  ENVIRONMENT: Staging (//config/appsettings-stg.json)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.1.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * CustomerApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CustomerApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for customerCompletePasswordReset
     *
     * Complete password reset. [ PRIVATE; SHOP API KEY REQUIRED ].
     *
     */
    public function testCustomerCompletePasswordReset()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerDeleteCustomer
     *
     * Deletes current customer. [ PRIVATE; CUSTOMER ENTITY ONLY; SHOP API KEY REQUIRED ].
     *
     */
    public function testCustomerDeleteCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerExternalLogin
     *
     * Authenticate customer account by retrieving information from external provider. [ PRIVATE; SHOP API KEY REQUIRED ].
     *
     */
    public function testCustomerExternalLogin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerLogin
     *
     * Authenticate customer with email and password. [ PRIVATE; SHOP API KEY REQUIRED ].
     *
     */
    public function testCustomerLogin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerLogout
     *
     * Logout authenticated customer account from all devices. [ PRIVATE; CUSTOMER ENTITY ONLY; SHOP API KEY REQUIRED ].
     *
     */
    public function testCustomerLogout()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerPasswordReset
     *
     * Initiate a password reset. [ PRIVATE; SHOP API KEY REQUIRED ].
     *
     */
    public function testCustomerPasswordReset()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerPhoneLogin
     *
     * Authenticate customer account by phone. [ PRIVATE; SHOP API KEY REQUIRED ].
     *
     */
    public function testCustomerPhoneLogin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerProfile
     *
     * Returns current customer profile. [ PRIVATE; CUSTOMER ENTITY ONLY; SHOP API KEY REQUIRED ].
     *
     */
    public function testCustomerProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerRefreshToken
     *
     * Creates a new token for authenticated customer account. [ PRIVATE; CUSTOMER ENTITY ONLY; SHOP API KEY REQUIRED ].
     *
     */
    public function testCustomerRefreshToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerRegisterEmail
     *
     * Register new customer account by email. [ PRIVATE; SHOP API KEY REQUIRED ].
     *
     */
    public function testCustomerRegisterEmail()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerUpdateProfile
     *
     * Update customer profile. [ PRIVATE; CUSTOMER ENTITY ONLY; SHOP API KEY REQUIRED ].
     *
     */
    public function testCustomerUpdateProfile()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerValidateToken
     *
     * Validate token. [ PRIVATE; SHOP API KEY REQUIRED ].
     *
     */
    public function testCustomerValidateToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerVerifyEmail
     *
     * Verify email. [ PRIVATE; CUSTOMER ENTITY ONLY; SHOP API KEY REQUIRED ].
     *
     */
    public function testCustomerVerifyEmail()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerVerifyEmailRegistration
     *
     * Verify customer account registered by email. [ PRIVATE; SHOP API KEY REQUIRED ].
     *
     */
    public function testCustomerVerifyEmailRegistration()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerVerifyLogin
     *
     * Verify two factor authentication. [ PRIVATE; SHOP API KEY REQUIRED ].
     *
     */
    public function testCustomerVerifyLogin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerVerifyPhone
     *
     * Verify email. [ PRIVATE; CUSTOMER ENTITY ONLY; SHOP API KEY REQUIRED ].
     *
     */
    public function testCustomerVerifyPhone()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for customerVerifyPhoneLogin
     *
     * Verify customer account phone authentication. [ PRIVATE; SHOP API KEY REQUIRED ].
     *
     */
    public function testCustomerVerifyPhoneLogin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
